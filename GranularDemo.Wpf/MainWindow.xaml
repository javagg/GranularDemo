<Window x:Class="GranularDemo.MainWindow"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            Title="MainWindow"
            Width="600"
            Height="400"
            FontFamily="Segoe UI"
            FontSize="14">
    <Grid>
        <Grid.Resources>
            <LinearGradientBrush x:Key="BackgroundBrush" StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                    <GradientStop Color="#FFF3F3F3" Offset="0"/>
                    <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                    <GradientStop Color="#FFDDDDDD" Offset="0.5"/>
                    <GradientStop Color="#FFCDCDCD" Offset="1"/>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="BorderBrush" Color="#FF707070"/>
            <LinearGradientBrush x:Key="HoverBackgroundOverlayBrush" StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                    <GradientStop Color="#FFEAF6FD" Offset="0"/>
                    <GradientStop Color="#FFD9F0FC" Offset="0.5"/>
                    <GradientStop Color="#FFBEE6FD" Offset="0.5"/>
                    <GradientStop Color="#FFA7D9F5" Offset="1"/>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="HoverBorderOverlayBrush" Color="#FF3C7FB1"/>
            <LinearGradientBrush x:Key="PressedBackgroundOverlayBrush" StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                    <GradientStop Color="#FFC2E4F6" Offset="0.5"/>
                    <GradientStop Color="#FFABDAF3" Offset="0.5"/>
                    <GradientStop Color="#FF90CBEB" Offset="1"/>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="PressedBorderOverlayBrush" Color="#FF2C628B"/>
            <SolidColorBrush x:Key="DisabledBackgroundOverlayBrush" Color="#FFF4F4F4"/>
            <SolidColorBrush x:Key="DisabledBorderOverlayBrush" Color="#FFADB2B5"/>
            <LinearGradientBrush x:Key="PressedTopDropShadowBrush" StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                    <GradientStop Color="#80333333" Offset="0"/>
                    <GradientStop Color="#00333333" Offset="1"/>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="PressedLeftDropShadowBrush" StartPoint="0,0" EndPoint="1,0">
                <GradientBrush.GradientStops>
                    <GradientStop Color="#80333333" Offset="0"/>
                    <GradientStop Color="#00333333" Offset="1"/>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="InnerBorderBrush" Color="#BFFFFFFF"/>
            <SolidColorBrush x:Key="DefaultedInnerBorderBrush" Color="#F900CCFF"/>
            <Style x:Key="DefaultFocusVisualStyle" TargetType="{x:Type Control}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Control}">
                            <Border BorderBrush="#20000000" BorderThickness="1" Margin="3" IsHitTestVisible="False"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ButtonBaseStyle" TargetType="{x:Type ButtonBase}">
                <Setter Property="MinHeight" Value="4" />
                <Setter Property="MinWidth" Value="4" />
                <Setter Property="Padding" Value="2" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
                <Setter Property="FocusVisualStyle" Value="{StaticResource DefaultFocusVisualStyle}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="hoverBackgroundOverlay" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0:0:0.3" To="0" />
                                                <DoubleAnimation Storyboard.TargetName="pressedBackgroundOverlay" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0:0:0.3" To="0" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="hoverBackgroundOverlay" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0:0:0.3" To="1" />
                                                <DoubleAnimation Storyboard.TargetName="pressedBackgroundOverlay" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0:0:0.1" To="0" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="pressedBackgroundOverlay" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0:0:0.1" To="1" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="2.5"/>
                                <Border x:Name="hoverBackgroundOverlay" Background="{StaticResource HoverBackgroundOverlayBrush}" BorderBrush="{StaticResource HoverBorderOverlayBrush}" BorderThickness="1" CornerRadius="2.5" Opacity="0"/>
                                <Border x:Name="pressedBackgroundOverlay" Background="{StaticResource PressedBackgroundOverlayBrush}" BorderBrush="{StaticResource PressedBorderOverlayBrush}" BorderThickness="1" CornerRadius="2.5" Opacity="0">
                                    <Grid>
                                        <Border Background="{StaticResource PressedLeftDropShadowBrush}" HorizontalAlignment="Left" Width="2" CornerRadius="2,0,0,2"/>
                                        <Border Background="{StaticResource PressedTopDropShadowBrush}" VerticalAlignment="Top" Height="2" CornerRadius="2,2,0,0"/>
                                    </Grid>
                                </Border>
                                <Border x:Name="checkedBackgroundOverlay" Background="{StaticResource PressedBackgroundOverlayBrush}" BorderBrush="{StaticResource PressedBorderOverlayBrush}" BorderThickness="1" CornerRadius="2.5" Opacity="0">
                                    <Grid>
                                        <Border Background="{StaticResource PressedLeftDropShadowBrush}" HorizontalAlignment="Left" Width="2" CornerRadius="2,0,0,2"/>
                                        <Border Background="{StaticResource PressedTopDropShadowBrush}" VerticalAlignment="Top" Height="2" CornerRadius="2,2,0,0"/>
                                    </Grid>
                                </Border>
                                <Border x:Name="disabledBackgroundOverlay" Background="{StaticResource DisabledBackgroundOverlayBrush}" BorderBrush="{StaticResource DisabledBorderOverlayBrush}" BorderThickness="1" CornerRadius="2.5" Opacity="0"/>
                                <Border x:Name="innerBorder" BorderBrush="{StaticResource InnerBorderBrush}" BorderThickness="1" CornerRadius="1.5" Margin="1" Opacity="1"/>
                                <Border Margin="2">
                                    <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="UIElement.IsFocused" Value="True">
                                    <Setter TargetName="innerBorder" Property="Border.BorderBrush" Value="{StaticResource DefaultedInnerBorderBrush}"/>
                                </Trigger>
                                <Trigger Property="ButtonBase.IsPressed" Value="True">
                                    <Setter TargetName="innerBorder" Property="UIElement.Opacity" Value="0"/>
                                </Trigger>
                                <Trigger Property="ToggleButton.IsChecked" Value="True">
                                    <Setter TargetName="innerBorder" Property="UIElement.Opacity" Value="0"/>
                                    <Setter TargetName="checkedBackgroundOverlay" Property="UIElement.Opacity" Value="1"/>
                                </Trigger>
                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                    <Setter TargetName="disabledBackgroundOverlay" Property="UIElement.Opacity" Value="1"/>
                                    <Setter Property="Control.Foreground" Value="#FFADADAD"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBaseStyle}"/>
            <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ButtonBaseStyle}"/>
        </Grid.Resources>
        <StackPanel Width="200" VerticalAlignment="Center">
            <TextBlock Text="Aero Button style" HorizontalAlignment="Center"/>
            <Button Margin="10" Padding="10" Content="Button 1"/>
            <Button Margin="10" Padding="10" Content="Button 2"/>
            <ToggleButton x:Name="button1" Margin="10" Padding="10">
                <TextBlock Text="{Binding IsChecked, ElementName=button1, StringFormat='IsChecked: {0}'}"/>
            </ToggleButton>
            <ToggleButton x:Name="button2" Margin="10" Padding="10" IsEnabled="{Binding IsChecked, ElementName=button1, Mode=OneWay}">
                <TextBlock Text="{Binding IsEnabled, ElementName=button2, StringFormat='IsEnabled: {0}', Mode=OneWay}"/>
            </ToggleButton>
        </StackPanel>
    </Grid>
</Window>                              